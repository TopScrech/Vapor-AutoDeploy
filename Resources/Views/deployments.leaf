<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Deployments Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-50 dark:bg-gray-900">
    <div class="container mx-auto px-4 py-8">
        <div class="mb-6">
            <h1 class="text-2xl font-bold text-gray-800 dark:text-gray-100">Recent Deployments</h1>
        </div>

        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden">
            <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                <thead class="bg-gray-50 dark:bg-gray-700">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">ID</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Status</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Started</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Duration</th>
                    </tr>
                </thead>
                <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
                    #for(task in tasks):
                    <tr class="hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
                        <td class="px-6 py-4 whitespace-nowrap">
                            <a href="/admin/deployments/#(task.id)" class="text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300 font-medium">#(task.id)</a>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            #if(task.status == "success"):
                                <span class="px-3 py-1 rounded-full bg-green-100 text-green-800 dark:bg-green-800/30 dark:text-green-200 text-sm">Success</span>
                            #elseif(task.status == "failure"):
                                <span class="px-3 py-1 rounded-full bg-red-100 text-red-800 dark:bg-red-800/30 dark:text-red-200 text-sm">Failed</span>
                            #else:
                                <span class="px-3 py-1 rounded-full bg-blue-100 text-blue-800 dark:bg-blue-800/30 dark:text-blue-200 text-sm">#(task.status)</span>
                            #endif
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="block text-sm text-gray-600 dark:text-gray-300">#date(task.startedAt, "MMM d, yyyy")</span>
                            <span class="block text-gray-400 dark:text-gray-500 text-xs">#date(task.startedAt, "HH:mm:ss")</span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            #if(task.durationString):
                                <span class="font-mono text-sm text-gray-600 dark:text-gray-300">#(task.durationString)</span>
                            #else:
                                <div class="flex items-center text-gray-400 dark:text-gray-500"
                                     data-started="#(task.startedAtTimestamp)">
                                    <svg class="animate-spin h-4 w-4 mr-2" ...></svg>
                                    <span class="live-duration">0.0s</span>
                                </div>
                            #endif
                        </td>
                    </tr>
                    #endfor
                </tbody>
            </table>
        </div>
    </div>

    <script>
    function updateDurations() {
        document.querySelectorAll('[data-started]').forEach(element => {
            const startTimestamp = Number(element.dataset.started);
            if (startTimestamp > 0) {
                const now = Date.now() / 1000; // Current UNIX timestamp in seconds
                const duration = Math.max(0, (now - startTimestamp)).toFixed(1);
                element.querySelector('.live-duration').textContent = `${duration}s`;
            }
        });
    }

    // Start updating immediately
    requestAnimationFrame(function update() {
        updateDurations();
        requestAnimationFrame(update);
    });
    </script>
</body>
</html>
